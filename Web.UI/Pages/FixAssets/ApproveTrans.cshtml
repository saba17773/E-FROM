@page "/FixAssets/{id}/ApproveTrans"
@model Web.UI.Pages.FixAssets.ApproveTransModel
@using Interfaces
 
@inject IAuthService authService
@using Infrastructure.Models 

@{
    ViewData["Title"] = "Approve Transaction";

    ViewData["Breadcrumb"] = new List<BreadcrumbModel> {
        new BreadcrumbModel { Text = "E-Form", Link = "javascript:void();" },
        new BreadcrumbModel { Text = "FixAssets", Link = "/FixAssets" },
        new BreadcrumbModel { Text = "Approve Transaction" }
    };
}

<div class="card">
    <div class="card-header">
        Approve Transaction 
        
    </div>
    <div class="card-body overflow-auto">
        <form method="post">
            <table id="gridApproveTrans" class="table table-hover"></table>
            <input type="hidden" id="Userauthen" value='@authService.GetClaim().Username'>
        </form>
    </div>
</div>

@section Scripts {
    <script>
    $(document).ready(function () {
        var gridApproveTrans = "#gridApproveTrans";

        var dtApproveTrans = $(gridApproveTrans).DataTable({
            serverSide: false,
            processing: false,
            destroy: true,
            responsive: false,
            ajax: {
                url: "/FixAssets/@Model.CCId/ApproveTrans?handler=Grid&id=@Model.CCId",
                type: "post",
                headers: {
                    "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                }
            },
            initComplete: function () {
                $('.dataTables_filter input').unbind();
                $('.dataTables_filter input').on("keyup", function (e) {
                    if (e.keyCode == 13) {
                        dtApproveTrans.search($(this).val()).draw();
                    }
                });
            },
            columns: [
                { title: "Level", data: "approveLevel" },
                { title: "Email", data: "email" },
                { title: "BackupEmail", data: "backupEmail" },
                { title: "Name", data: "name" },
                { title: "Status", data: "isDone"},
                { title: "Urgent", data: "urgent" },
                { title: "Send Email Date", data: "sendEmailDate" },
                { title: "Approve Date", data: "approveDate" },
                { title: "Reject Date", data: "rejectDate" }
            ],
            columnDefs: [
                {
                    targets: 1,
                    render: function (data, type, row) {
                        if (row.urgent === 0 && row.isDone === 1) {
                            return "<a class='text-danger'>"+row.email+"</a>";
                        } 
                        return data;
                    }
                },
                {
                    targets: 2,
                    render: function (data, type, row) {
                        if (row.urgent === 1 && row.isDone === 1) {
                            return "<a class='text-danger'>"+row.backupEmail+"</a>";
                        } 
                        return data;
                    }
                },
                {
                    targets: 4,
                    render: function (data, type, row) {
                        if (data === 0 &&
                            row.sendEmailDate === null &&
                            row.approveDate === null &&
                            row.rejectDate === null) {
                            return "<span class='badge badge-danger'>ยังไม่ได้ดำเนินการ</span>";
                        } else if (data === 1) {
                            return "<span class='badge badge-success'>ดำเนินการแล้ว</span>";
                        } else if (data === 0 &&
                            row.sendEmailDate !== null && 
                            row.rejectDate <= row.approveDate) {
                            return "<span class='badge badge-warning'>รอดำเนินการ</span>";
                        }else if(row.rejectDate >= row.approveDate){
                            return "<span class='badge badge-danger'>Reject</span>";
                        }else if(row.rejectDate !== null && data === 0){
                            return "<span class='badge badge-danger'>Reject</span>";
                        }
                        return data;
                    }
                },
                {
                    targets: 5,
                    render: function (data, type, row) {
                        @* if ($('#Userauthen').val()=="administrator"){ *@
                        if($('#Userauthen').val()=="administrator"
                        && row.sendEmailDate !== null && row.rejectDate <= row.approveDate){
                            if (data === 1) {
                                return "<a href='/FixAssets/@Model.CCId/ApproveTrans?tid=" + row.id +"&urgent=0' class='text-danger'>เร่งด่วน</a>";
                            } else {
                                return "<a href='/FixAssets/@Model.CCId/ApproveTrans?tid=" + row.id +"&urgent=1' class='text-success'>ปรกติ</a>";
                            }
                        }else{
                            if (data === 1) {
                                return "<a class='text-danger'>เร่งด่วน</a>";
                            } else {
                                return "<a class='text-success'>ปรกติ</a>";
                            }
                        }
                    }
                }
            ]
        });

        $("#resetFlow").on("click", function (){
            if(confirm("Are You Sure?")){
                $("#resetFlow").attr('disabled',true);
                $.ajax({
                    url: "/FixAssets/{id}/ApproveTrans?handler=ResetFlow",
                    type: "get",
                    data : {
                        CCId : $("#resetFlow").val(),
                        remark : $("#remark").val()
                    }
                }).done(function (data) {
                    window.location.reload();
                });
            }
            
        });

    });
    </script>
}
